name: build-and-validate

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    environment: testpypi
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.13
          architecture: x64
          check-latest: true

      - name: mint API token
        id: mint-token
        run: |
          # retrieve the ambient OIDC token
          resp=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=testpypi")
          oidc_token=$(jq -r '.value' <<< "${resp}")
          
          # exchange the OIDC token for an API token
          resp=$(curl -X POST https://test.pypi.org/_/oidc/mint-token -d "{\"token\": \"${oidc_token}\"}")
          api_token=$(jq -r '.token' <<< "${resp}")
          
          # mask the newly minted API token, so that we don't accidentally leak it
          echo "${api_token}"

          # see the next step in the workflow for an example of using this step output
          echo "api-token=${api_token}" >> "${GITHUB_OUTPUT}"
      - name: publish-artifacts
        env:
          PYPI_TOKEN: ${{ steps.mint-token.outputs.api-token }}
        run: |
          make publish




